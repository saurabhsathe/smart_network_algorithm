# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import file_transfer_pb2 as file__transfer__pb2


class FileTransferServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.file_transfer = channel.unary_unary(
                '/FileTransferService/file_transfer',
                request_serializer=file__transfer__pb2.Request.SerializeToString,
                response_deserializer=file__transfer__pb2.Response.FromString,
                )
        self.ServerResponse = channel.unary_unary(
                '/FileTransferService/ServerResponse',
                request_serializer=file__transfer__pb2.ServerSpeedRequest.SerializeToString,
                response_deserializer=file__transfer__pb2.ServerSpeedResponse.FromString,
                )
        self.TransferFileStart = channel.unary_unary(
                '/FileTransferService/TransferFileStart',
                request_serializer=file__transfer__pb2.FileTransferStart.SerializeToString,
                response_deserializer=file__transfer__pb2.GeneralMessage.FromString,
                )
        self.TransferFileEnd = channel.unary_unary(
                '/FileTransferService/TransferFileEnd',
                request_serializer=file__transfer__pb2.FileTransferEnd.SerializeToString,
                response_deserializer=file__transfer__pb2.GeneralMessage.FromString,
                )
        self.OptimizeStart = channel.unary_unary(
                '/FileTransferService/OptimizeStart',
                request_serializer=file__transfer__pb2.GeneralMessage.SerializeToString,
                response_deserializer=file__transfer__pb2.GeneralMessage.FromString,
                )
        self.OptimizeEnd = channel.unary_unary(
                '/FileTransferService/OptimizeEnd',
                request_serializer=file__transfer__pb2.GeneralMessage.SerializeToString,
                response_deserializer=file__transfer__pb2.GeneralMessage.FromString,
                )
        self.OptimizerFileTransfer = channel.unary_unary(
                '/FileTransferService/OptimizerFileTransfer',
                request_serializer=file__transfer__pb2.Request.SerializeToString,
                response_deserializer=file__transfer__pb2.Response.FromString,
                )


class FileTransferServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def file_transfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ServerResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferFileStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferFileEnd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OptimizeStart(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OptimizeEnd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OptimizerFileTransfer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileTransferServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'file_transfer': grpc.unary_unary_rpc_method_handler(
                    servicer.file_transfer,
                    request_deserializer=file__transfer__pb2.Request.FromString,
                    response_serializer=file__transfer__pb2.Response.SerializeToString,
            ),
            'ServerResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.ServerResponse,
                    request_deserializer=file__transfer__pb2.ServerSpeedRequest.FromString,
                    response_serializer=file__transfer__pb2.ServerSpeedResponse.SerializeToString,
            ),
            'TransferFileStart': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferFileStart,
                    request_deserializer=file__transfer__pb2.FileTransferStart.FromString,
                    response_serializer=file__transfer__pb2.GeneralMessage.SerializeToString,
            ),
            'TransferFileEnd': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferFileEnd,
                    request_deserializer=file__transfer__pb2.FileTransferEnd.FromString,
                    response_serializer=file__transfer__pb2.GeneralMessage.SerializeToString,
            ),
            'OptimizeStart': grpc.unary_unary_rpc_method_handler(
                    servicer.OptimizeStart,
                    request_deserializer=file__transfer__pb2.GeneralMessage.FromString,
                    response_serializer=file__transfer__pb2.GeneralMessage.SerializeToString,
            ),
            'OptimizeEnd': grpc.unary_unary_rpc_method_handler(
                    servicer.OptimizeEnd,
                    request_deserializer=file__transfer__pb2.GeneralMessage.FromString,
                    response_serializer=file__transfer__pb2.GeneralMessage.SerializeToString,
            ),
            'OptimizerFileTransfer': grpc.unary_unary_rpc_method_handler(
                    servicer.OptimizerFileTransfer,
                    request_deserializer=file__transfer__pb2.Request.FromString,
                    response_serializer=file__transfer__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FileTransferService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FileTransferService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def file_transfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileTransferService/file_transfer',
            file__transfer__pb2.Request.SerializeToString,
            file__transfer__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ServerResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileTransferService/ServerResponse',
            file__transfer__pb2.ServerSpeedRequest.SerializeToString,
            file__transfer__pb2.ServerSpeedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferFileStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileTransferService/TransferFileStart',
            file__transfer__pb2.FileTransferStart.SerializeToString,
            file__transfer__pb2.GeneralMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferFileEnd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileTransferService/TransferFileEnd',
            file__transfer__pb2.FileTransferEnd.SerializeToString,
            file__transfer__pb2.GeneralMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OptimizeStart(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileTransferService/OptimizeStart',
            file__transfer__pb2.GeneralMessage.SerializeToString,
            file__transfer__pb2.GeneralMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OptimizeEnd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileTransferService/OptimizeEnd',
            file__transfer__pb2.GeneralMessage.SerializeToString,
            file__transfer__pb2.GeneralMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OptimizerFileTransfer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileTransferService/OptimizerFileTransfer',
            file__transfer__pb2.Request.SerializeToString,
            file__transfer__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
